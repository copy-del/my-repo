<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible 
	                   to all other web components 
	    Spring환경설정 중에서 DB관련 설정을 하는 파일!!-->
	 <!--  <bean> 태그 :  객체를 생성하는 태그!  -->                  
		<!-- 1. HikariCP(DBCP) 객체 생성 : DB연결 내용을 가지고 있는 객체 -->
	<bean class="com.zaxxer.hikari.HikariConfig" id="HikariConfig" >
	  <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	  <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/com"/>
	  <property name="username" value="com"/>
	  <property name="password" value="com01"/>
	</bean>
	<!-- 2. HikariDataSource 객체 생성
			: DBCP(DataBase Connection Pool)
	 일반 java객체 생성 -> 
	 HikariDataSource dataSource = new HikariDataSource();
	 -->
	 <bean class="com.zaxxer.hikari.HikariDataSource" id="HikariDataSource">
	 	<!-- DB생성 정보를 생성자로 주입 -->
	 	<constructor-arg ref="HikariConfig"></constructor-arg>
	 </bean>
	 <!-- 할당하다 : 변수에 데이터 값을 넣는 행위
	 	  초기화하다 : 변수를 선언하고 "처음으로" 데이터를 넣는 행위 -->
	 <!-- 3. SQLSessionFactory Bean을 객체 생성 -->
	 <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="SqlSessionFactory">
	 	<property name="dataSource" ref="HikariDataSource"></property>
	 </bean>
	 
	 <!-- Mapper Interface들을 메모리에 올리는 방법(scan)
	 	위와 같은 코드 실체 구현 하려면 : Mapper파일 경로 필요
	 	> Mapper파일의 위치 등록 -->

	<mybatis-spring:scan base-package="com.smhrd.database"/>


</beans>
