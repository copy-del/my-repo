문제 1-1

선형 회귀
직선 형태의 연속적인 실수 값 예측
규제가 있는 회귀모델(Lasso, Ridge)과 딥러닝의 기초


로지스틱 회귀 모델
직선 하나로 두 집단을 분류 할 수는 없을까? 에서 착안.
선현 모델 방식으로 이진 분류
회귀 모델이지만 분류에서 사용

문제 1-2

평균제곱오차 
오차의 제곱의 평균(MSE)으로 예측값과 실제 값의 오차의 평균을 알아내기 위해 사용한다.
오차의 절대값을 알아내기 위해서 오차의 제곱을 하며 단위를 축소시키기 위한
평균제곱근오차(RMSE)를 구하기도 한다.

문제 1-3

경사하강법
비용함수의 기울기(경사)를 구하여 기울기가 낮은 쪽(0이 되는 곳)으로 계속 이동하여 값을 최적화 시키는 방법
모든 데이터를 사용(모수조사)하기 때문에 속도가 느리다.
학습률 조정 값이 낮으면 계산이 느려지고, 높으면 최적값을 못찾을 수도 있다.

문제 1-4

시그모이드 함수
딥러닝 모델 중 이진 분류 모델에서 사용하는 대표적인 활성화 함수 이다.
0~1의 선을 그리는 함수이며, 특정 지점을 지나면 급격하게 기우는 성격을 띄는 비선형 함수이다.

문제 2-1
신경망


가중치


퍼셉트론
사람의 신경망 처럼 역치 이상의 자극만 다음 뉴런으로 전달하는 개념

문제 2-2
잘 이해하지 못하고 넘어간 것 같습니다

문제 2-3

딥러닝 모델에서 은닉층의 뉴런 수가 많으면 패턴을 학습하는데 도움을 줄 수 있지만 과대적합이 발생한다.
해결방법
데이터 증식 방법을 이용하여 훈련데이터의 양을 늘려 과대적합을 줄인다.
Dropout 함수를 사용하여 학습중 일정 분량의 뉴런을 다음 층으로 넘겨 활성화 되지 않게 하여 과대적합을 줄인다.

문제 2-4

활성화 홤수
사람같이 사고하고 행동하는 인공지능 기술을 실현하기 위해 도입된 함수
 선형모델을 기반으로 하는 딥러닝 신경망에서 분류 문제를 해결하기 위해서 고안된 비선형 함수

문제 3-1

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, InputLayer

model = Sequential()
model.add(InputLayer(10))
model.add(Dense(10, activation='relu'))
model.add(Dense(3, activation = 'relu'))

문제 3-2

model.compile(
    optimizer = 'adam',
    batch_size = 20,
    epochs = 100,
    validation_split = 0.25
)

문제 3-3

his = model.fit(X_data, y_data)
print(his.history['accuracy'][-1])
print(his.predict(X_data))